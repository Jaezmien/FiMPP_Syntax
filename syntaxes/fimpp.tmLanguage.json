{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "FiM++",
	"patterns": [
        {
            "include": "#punctuations"
        },
        {
            "match":"(P\\.)(P\\.)*S\\. .*",
            "name":"comment.line.fpp.fimpp"
        },
        {
			"include": "#comment"
        },


		{
            "match": "(Dear Princess Celestia: )(.+)",
            "captures": {
                "1": {
                    "name": "keyword.other.namespace.fimpp"
                },
                "2": {
                    "name": "entity.name.fimpp",
                    "patterns": [
                        {
                            "include": "#punctuations"
                        }
                    ]
                }
            }
        },
        {
            "match": "(Your faithful student, )(.+)",
            "captures": {
                "1": {
                    "name": "keyword.other.namespace.fimpp"
                },
                "2": {
                    "name": "entity.name.fimpp",
                    "patterns": [
                        {
                            "include": "#punctuations"
                        }
                    ]
                }
            }
        },


        {
            "match": "((?:Today )?I learned) (.+)",
            "captures": {
                "1": {
                    "name": "keyword.other.function.constructor.fimpp"
                },
                "2": {
                    "patterns": [{
                            "include": "#function_name"
                    }]
                }
            }
        },
        {
            "match": "(That's all about) (.+)([\\.\\!\\?\\:\\,])",
            "captures": {
                "1": {
                    "name": "keyword.other.function.deconstructor.fimpp"
                },
                "2": {
                    "name": "entity.name.function"
                },
                "3": {
                    "comment": "I have no idea why I have to do this but it doesn't work for this one.",
                    "patterns": [{
                        "include": "#punctuations"
                    }]
                }
            }
        },

        {
            "match": "(Did you know that) (.+(?= (?:has|is|likes?|was))) (has|is|likes?|was) (.+)(?:[\\.\\!\\?\\:\\,])",
            "captures": {
                "1": {
                    "name": "keyword.other.variable.declaret.fimpp"
                },
                "2": {
                    "name": "entity.name"
                },
                "3": {
                    "name": "keyword.other"
                },
                "4": {
                    "patterns": [{
                        "include": "#variable_strict"
                    }]
                }
            }
        },

        {
            "match":"(I (?:said|sang|wrote|remembered|would|asked|heard)) (.+)(?:[\\.\\!\\?\\:\\,])",
            "captures": {
                "1": {
                    "name":"entity.name.function.fimpp"
                },
                "2": {
                    "patterns": [{
                        "include": "#variable_values"
                    }]
                }
            }
        },
        {
            "match": "(.+)( became )(.+)",
            "captures": {
                "1": {
                    "name": "entity.name",
                    "patterns": [{
                        "include": "#variable_array"
                    }]
                },
                "2": {
                    "name": "keyword.operator"
                },
                "3": {
                    "name": "entity.name",
                    "patterns": [{
                        "include": "#variable_values"
                    }]
                }
            }
        },


        {
            "patterns": [
                {
                    "match": "That's what I (did|would do)",
                    "name": "keyword.other.statement.end.fimpp"
                }
            ]
        }

    ],
    "repository": {
        "variable_values": {
            "patterns": [
                {
                    "match":"(?<!\\w)(\\d+ )?[\\d ]+(?!\\w)( \\d+)?",
                    "captures": {
                        "0": {
                            "name":"constant.numeric.integer.fimpp"
                        }
                    }
                },
                {
                    "include": "#strings"
                },
                {
                    "include": "#chars"
                },
                {
                    "match":"nothing|correct|right|true|yes|false|incorrect|no|wrong",
                    "name":"constant.language.fimpp"
                },
                {
                    "include": "#function_param_inner"
                },
                {
                    "include": "#comment"
                },
                {
                    "match": "((?:length of )|(?:char of num )|(?:num of char )|(?:string of )|(?:number of )|(?:(?:sqrt|square root) of ))(.+)",
                    "captures": {
                        "1": {
                            "name": "support.function"
                        },
                        "2": {
                            "patterns": [{
                                "include": "#variable_values"
                            }]
                        }
                    }
                },   
                {
                    "match":"(.+)((?:added to|plus)|(?:minus|without)|(?:multiplied with|times)|(?:divided by|over)|(?:(?:the remainder of)|mod(?:ulo)?))(.+)",
                    "captures": {
                        "1": {
                            "patterns": [{
                                "include": "#variable_values"
                            }]
                        },
                        "2": {
                            "name":"keyword.operator.fimpp"
                        },
                        "3": {
                            "patterns": [{
                                "include": "#variable_values"
                            }]
                        }
                    }
                }
            ]
        },
        "variable_array": {
            "patterns": [
                {
                    "match": "(.+) (\\d+)",
                    "captures": {
                        "1": {
                            "name":"entity.name.fpp"
                        },
                        "2": {
                            "name":"constant.numeric.integer.fimpp"
                        }
                    }
                },
                {
                    "match": "(.+) (of) (.+)",
                    "captures": {
                        "1": {
                            "name":"entity.name.fpp"
                        },
                        "2": {
                            "name": "keyword.other"
                        },
                        "3": {
                            "name":"entity.name.fpp"
                        }
                    }
                }
            ]
        },
        "punctuations": {
            "match": "(.)(?<=[\\.\\!\\?\\:\\,])",
            "name": "punctuation.fimpp"
        },
        "strings": {
			"name": "string.quoted.double.fimpp",
			"begin": "\"",
			"end": "\"",
			"patterns": [
                {
                    "name": "constant.character.escape.fimpp",
                    "match": "\\\\."
                }
            ]
        },
        "chars": {
            "name": "string.quoted.single.fimpp",
            "match": "'((\\\\.)|(.))'",
            "captures": {
                "2": {
                    "name": "constant.character.escape.fimpp"
                },
                "1": {
                    "name": "string.quoted.single.fimpp"
                }
            }
        },
        "variable_strict": {
            "patterns": [
                {
                    "match":"((?:(?:the |many )?numbers)|(?:(?:the |a )?number))(?: (.+))?",
                    "captures": {
                        "1": {
                            "name":"keyword.type.fimpp"
                        },
                        "2": {
                            "patterns": [{
                                "include": "#variable_values"
                            }]
                        }
                    }
                },
                {
                    "match":"((?:(?:the )?(?:arguments|logics))|(?:(?:an |the )?(?:argument|logic)))(?: (.+))?",
                    "captures": {
                        "1": {
                            "name":"keyword.type.fimpp"
                        },
                        "2": {
                            "patterns": [{
                                "include": "#variable_values"
                            }]
                        }
                    }
                },
                {
                    "match":"((?:(?:many |the )?(?:phrases|quotes|sentences|words))|(?:(?:a |the )?(?:phrase|quote|sentence|word|characters|letters)))(?: (.+))?",
                    "captures": {
                        "1": {
                            "name":"keyword.type.fimpp"
                        },
                        "2": {
                            "patterns": [{
                                "include": "#variable_values"
                            }]
                        }
                    }
                },
                {
                    "match":"((?:a |the )?(?:character|letter))(?: (.+))?",
                    "captures": {
                        "1": {
                            "name":"keyword.type.fimpp"
                        },
                        "2": {
                            "patterns": [{
                                "include": "#variable_values"
                            }]
                        }
                    }
                }
            ]
        },
        "comment": {
			"name": "comment.block.fimpp",
			"begin": "\\(",
			"end": "\\)"
        },

        "function_name": {
            "match": "(?:((?:.+?(?= using| to get| with)))(.+))|(.+[^\\.\\!\\?\\:\\,])",
            "captures": {
                "1": {
                    "name": "entity.name.function"
                },
                "2": {
                    "patterns": [{
                        "include": "#function_param"
                    }]
                },
                "3": {
                    "name": "entity.name.function"
                }
            }
        },
        "function_param": {
            "match": "(?:((?:.+?(?= using| to get| with)))(.+))|(.+)",
            "captures": {
                "1": {
                    "patterns": [{
                        "include": "#function_param_inner"
                    }]
                },
                "2": {
                    "patterns": [{
                        "include": "#function_param_inner"
                    }]
                },
                "3": {
                    "patterns": [{
                        "include": "#function_param_inner"
                    }]
                }
            }
        },
        "function_param_inner": {
            "patterns": [
                {
                    "match": "(using|with) (.+)",
                    "captures": {
                        "1": {
                            "name": "keyword.other.function.parameter.fimpp"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "match": " and ",
                                    "name": "keyword.other"
                                },
                                {
                                    "include": "#variable_values"
                                }
                            ]
                        }
                    }
                },
                {
                    "match": "(to get)",
                    "captures": {
                        "1": {
                            "name": "keyword.other.function.return.fimpp"
                        },
                        "2": {
                            "patterns": [
                                {
                                    "include": "#variable_values"
                                }
                            ]
                        }
                    }

                }
            ]
        }
    },
	"scopeName": "source.fpp"
}